{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect, useState } from 'react';\nimport * as Speech from 'expo-speech';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport Button from \"../../src/components/Button\";\nimport { getAuth } from 'firebase/auth';\nimport { app } from \"../../firebase\";\nimport { getFirestore, doc, updateDoc, arrayUnion, setDoc } from 'firebase/firestore';\nimport { CommonActions } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TextToSpeechScreen = function TextToSpeechScreen(props) {\n  props.navigation.setOptions({\n    headerStyle: {\n      backgroundColor: '#88C987'\n    },\n    headerTitleStyle: {\n      color: '#fff'\n    },\n    title: 'Texto para Voz'\n  });\n  var _useState = useState(\"pt-BR\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    _setSelected = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var data = [{\n    key: 'pt-BR',\n    value: 'Português Brasil'\n  }, {\n    key: 'pt-PT',\n    value: 'Português Portugal'\n  }, {\n    key: 'en-US',\n    value: 'Inglês EUA'\n  }, {\n    key: 'es-MX',\n    value: 'Espanhol Mexico'\n  }, {\n    key: 'es-ES',\n    value: 'Espanhol Esapanha'\n  }, {\n    key: 'fr-FR',\n    value: 'Francês'\n  }, {\n    key: 'it-IT',\n    value: 'Italiano'\n  }, {\n    key: 'ja-JP',\n    value: 'Japonês'\n  }, {\n    key: 'nl-NL',\n    value: 'Alemão'\n  }];\n  useEffect(function () {\n    if (props.route.params != undefined) {\n      setMessage(props.route.params.user.message);\n    }\n  }, []);\n  var auth = getAuth(app);\n  var db = getFirestore(app);\n  var addToFav = function addToFav() {\n    setDoc(doc(db, \"users\", auth.currentUser.uid, \"fav\", \"TextToVoice\"), {\n      message: arrayUnion(message)\n    }, {\n      merge: true\n    });\n    console.log('TextToSpeechScreen, addToFav: adicionado ao favorito');\n  };\n  var speak = function speak() {\n    Speech.speak(message, {\n      language: selected,\n      rate: 0.5\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(SelectList, {\n      style: styles.selectionList,\n      setSelected: function setSelected(val) {\n        return _setSelected(val);\n      },\n      data: data,\n      save: \"key\",\n      placeHolder: \"Idioma da voz\",\n      defaultOption: {\n        key: 'pt-BR',\n        value: 'Português Brasil'\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Insira o texto a ser falado\",\n      value: message,\n      onChangeText: function onChangeText(text) {\n        return setMessage(text);\n      },\n      multiline: true\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: speak,\n        style: styles.button,\n        children: _jsx(Image, {\n          source: require(\"../../src/assets/imagens/icon_TextVoice.png\"),\n          style: styles.icon\n        })\n      })\n    }), _jsx(Button, {\n      texto: \"Adicionar texto aos Favoritos\",\n      onClick: addToFav\n    })]\n  });\n};\nexport default TextToSpeechScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 2,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    width: '85%',\n    height: 274,\n    textAlign: 'center',\n    marginTop: 20,\n    borderRadius: 10,\n    backgroundColor: '#D9D9D9'\n  },\n  buttonContainer: {\n    width: '85%',\n    height: 274,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 12\n  },\n  button: {\n    backgroundColor: '#88C987',\n    width: '80%',\n    height: '100%',\n    borderRadius: 360,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectionList: {\n    marginTop: 10\n  },\n  icon: {\n    Width: \"100%\",\n    Height: \"100%\",\n    resizeMode: 'cover'\n  },\n  favorito: {\n    backgroundColor: '#EAD076',\n    width: '80%',\n    height: '100%',\n    borderRadius: 360,\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Speech","SelectList","Button","getAuth","app","getFirestore","doc","updateDoc","arrayUnion","setDoc","CommonActions","jsx","_jsx","jsxs","_jsxs","TextToSpeechScreen","props","navigation","setOptions","headerStyle","backgroundColor","headerTitleStyle","color","title","_useState","_useState2","_slicedToArray","selected","setSelected","_useState3","_useState4","message","setMessage","data","key","value","route","params","undefined","user","auth","db","addToFav","currentUser","uid","merge","console","log","speak","language","rate","View","style","styles","container","children","selectionList","val","save","placeHolder","defaultOption","TextInput","input","placeholder","onChangeText","text","multiline","buttonContainer","TouchableOpacity","onPress","button","Image","source","require","icon","texto","onClick","StyleSheet","create","flex","flexDirection","alignItems","width","height","textAlign","marginTop","borderRadius","justifyContent","Width","Height","resizeMode","favorito"],"sources":["D:/Gabriel Teixeira/Documentos/GitHub/Aplicativo/teste_login2 (visual)/screens/TextToSpeechScreen/TextToSpeechScreen.js.js"],"sourcesContent":["import { View, TextInput, StyleSheet, TouchableOpacity, Image } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport * as Speech from 'expo-speech';\r\nimport { SelectList } from 'react-native-dropdown-select-list'\r\nimport Button from '../../src/components/Button';\r\nimport { getAuth } from 'firebase/auth'\r\nimport { app } from '../../firebase'\r\nimport { getFirestore, doc, updateDoc, arrayUnion, setDoc } from 'firebase/firestore'\r\nimport { CommonActions } from '@react-navigation/native';\r\n\r\n\r\nconst TextToSpeechScreen = (props) => {\r\n  props.navigation.setOptions({\r\n    //configura a barra superior\r\n    headerStyle: { backgroundColor: '#88C987' },\r\n    headerTitleStyle: { color: '#fff' },\r\n    title: 'Texto para Voz',\r\n  });\r\n\r\n  const [selected, setSelected] = useState(\"pt-BR\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const data = [\r\n\r\n    { key: 'pt-BR', value: 'Português Brasil' },\r\n    { key: 'pt-PT', value: 'Português Portugal' },\r\n    { key: 'en-US', value: 'Inglês EUA' },\r\n    { key: 'es-MX', value: 'Espanhol Mexico' },\r\n    { key: 'es-ES', value: 'Espanhol Esapanha' },\r\n    { key: 'fr-FR', value: 'Francês' },\r\n    { key: 'it-IT', value: 'Italiano' },\r\n    { key: 'ja-JP', value: 'Japonês' },\r\n    { key: 'nl-NL', value: 'Alemão' },\r\n\r\n  ]\r\n  //Aqui estou pegando o item deixado como parametro numa rota anterior (vinda de navigate)\r\n  useEffect(() => {\r\n    if(props.route.params != undefined){\r\n      setMessage(props.route.params.user.message)\r\n    }\r\n  }, [])\r\n  const auth = getAuth(app);\r\n  const db = getFirestore(app);\r\n\r\n\r\n  const addToFav = () => {\r\n    setDoc(doc(db, \"users\", auth.currentUser.uid, \"fav\", \"TextToVoice\"), { message: arrayUnion(message) }, { merge: true })\r\n    console.log('TextToSpeechScreen, addToFav: adicionado ao favorito')\r\n  }\r\n\r\n  const speak = () => {\r\n    Speech.speak(message,\r\n      {\r\n        language: selected,\r\n        rate: 0.5,\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <View style={styles.container}>\r\n      <SelectList\r\n        style={styles.selectionList}\r\n        setSelected={(val) => setSelected(val)}\r\n        data={data}\r\n        save=\"key\"\r\n        placeHolder=\"Idioma da voz\"\r\n        defaultOption={{ key: 'pt-BR', value: 'Português Brasil' }}\r\n      />\r\n\r\n\r\n      <TextInput style={styles.input}\r\n        placeholder=\"Insira o texto a ser falado\"\r\n        value={message}\r\n        onChangeText={text => setMessage(text)}\r\n        multiline\r\n      />\r\n\r\n      <View style={styles.buttonContainer}>\r\n\r\n        <TouchableOpacity\r\n\r\n          onPress={speak}\r\n          style={styles.button}\r\n        >\r\n          <Image\r\n            source={require('../../src/assets/imagens/icon_TextVoice.png')}\r\n            style={styles.icon}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Button\r\n        texto='Adicionar texto aos Favoritos' onClick={addToFav}\r\n      />\r\n\r\n\r\n\r\n    </View>\r\n  );\r\n\r\n}\r\n\r\nexport default TextToSpeechScreen;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 2,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  input: {\r\n\r\n    width: '85%',\r\n    height: 274,\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: '#D9D9D9',\r\n\r\n  },\r\n\r\n  buttonContainer: {\r\n    width: '85%',\r\n    height: 274,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 12,\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: '#88C987',\r\n    width: '80%',\r\n    height: '100%',\r\n    borderRadius: 360,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n  selectionList: {\r\n    marginTop: 10,\r\n  },\r\n  icon: {\r\n    Width: \"100%\",\r\n    Height: \"100%\",\r\n    resizeMode: 'cover',\r\n  },\r\n  favorito: {\r\n    backgroundColor: '#EAD076',\r\n    width: '80%',\r\n    height: '100%',\r\n    borderRadius: 360,\r\n    alignItems: 'flex-start'\r\n  }\r\n}) "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}