{"ast":null,"code":"import LoginScreen from \"./screens/LoginScreen\";\nimport FavoriteScreen from \"./screens/FavoriteScreen/\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport HomeScreen from \"./screens/HomeScreen/Index\";\nimport Preload from \"./screens/Preload\";\nimport TextToSpeechScreen from \"./screens/TextToSpeechScreen/TextToSpeechScreen.js\";\nimport PecsScreen from \"./screens/PecsScreen\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { COLORS } from \"./src/assets/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: COLORS.primary\n    }), _jsxs(Stack.Navigator, {\n      initialRouteName: \"Preload\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Preload\",\n        component: Preload,\n        options: PreLoadStyle\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: RegisterScreenStyle\n      }), _jsx(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPassword,\n        options: forgotPasswordStyle\n      }), _jsx(Stack.Screen, {\n        name: \"FavoriteScreen\",\n        component: FavoriteScreen,\n        options: favoriteScreenStyle\n      }), _jsx(Stack.Screen, {\n        name: \"TextToSpeech\",\n        component: TextToSpeechScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Pecs\",\n        component: PecsScreen\n      })]\n    })]\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar PreLoadStyle = {\n  headerShown: false\n};\nvar RegisterScreenStyle = {\n  title: 'Registre-se'\n};\nvar forgotPasswordStyle = {\n  title: 'Recuperação de senha'\n};\nvar favoriteScreenStyle = {\n  title: 'Favoritos'\n};","map":{"version":3,"names":["LoginScreen","FavoriteScreen","RegisterScreen","ForgotPassword","HomeScreen","Preload","TextToSpeechScreen","PecsScreen","StyleSheet","StatusBar","NavigationContainer","createNativeStackNavigator","COLORS","jsx","_jsx","jsxs","_jsxs","Stack","App","children","backgroundColor","primary","Navigator","initialRouteName","Screen","name","component","options","PreLoadStyle","headerShown","RegisterScreenStyle","forgotPasswordStyle","favoriteScreenStyle","styles","create","container","flex","alignItems","justifyContent","title"],"sources":["D:/Gabriel Teixeira/Documentos/GitHub/Aplicativo/teste_login2 (visual)/App.js"],"sourcesContent":["import LoginScreen from './screens/LoginScreen';\r\nimport FavoriteScreen from './screens/FavoriteScreen/';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ForgotPassword from './screens/ForgotPassword';\r\nimport HomeScreen from './screens/HomeScreen/Index';\r\nimport Preload from './screens/Preload';\r\nimport TextToSpeechScreen from './screens/TextToSpeechScreen/TextToSpeechScreen.js';\r\nimport PecsScreen from './screens/PecsScreen';\r\n//import TelaTeste from './screens/TelaTeste';\r\nimport { StyleSheet, StatusBar } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { COLORS } from './src/assets/colors';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar backgroundColor={COLORS.primary} />\r\n      <Stack.Navigator initialRouteName='Preload'>\r\n        <Stack.Screen\r\n          name=\"Preload\"\r\n          component={Preload}\r\n          options={PreLoadStyle}\r\n        />\r\n        <Stack.Screen\r\n          options={{ headerShown: false }}\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n        />\r\n\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n        />\r\n\r\n        <Stack.Screen\r\n          name=\"Register\"\r\n          component={RegisterScreen}\r\n          options={RegisterScreenStyle}\r\n        />\r\n\r\n        <Stack.Screen\r\n          name=\"ForgotPassword\"\r\n          component={ForgotPassword}\r\n          options={forgotPasswordStyle}\r\n        />\r\n        <Stack.Screen\r\n          name=\"FavoriteScreen\"\r\n          component={FavoriteScreen}\r\n          options={favoriteScreenStyle}\r\n        />\r\n\r\n        <Stack.Screen\r\n          name=\"TextToSpeech\"\r\n          component={TextToSpeechScreen}\r\n        //options={forgotPasswordStyle}\r\n        />\r\n\r\n        <Stack.Screen\r\n          name=\"Pecs\"\r\n          component={PecsScreen}\r\n        //options={forgotPasswordStyle}\r\n        />\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst PreLoadStyle = {\r\n  headerShown: false,\r\n}\r\nconst RegisterScreenStyle = {\r\n  title: 'Registre-se',\r\n}\r\n\r\nconst forgotPasswordStyle = {\r\n  title: 'Recuperação de senha',\r\n}\r\nconst favoriteScreenStyle = {\r\n  title: 'Favoritos',\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,cAAc;AACrB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,OAAO;AACd,OAAOC,kBAAkB;AACzB,OAAOC,UAAU;AAA6B,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAG9C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,MAAM;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,KAAK,GAAGN,0BAA0B,CAAC,CAAC;AAC1C,IAAMO,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACEF,KAAA,CAACN,mBAAmB;IAAAS,QAAA,GAClBL,IAAA,CAACL,SAAS;MAACW,eAAe,EAAER,MAAM,CAACS;IAAQ,CAAE,CAAC,EAC9CL,KAAA,CAACC,KAAK,CAACK,SAAS;MAACC,gBAAgB,EAAC,SAAS;MAAAJ,QAAA,GACzCL,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAErB,OAAQ;QACnBsB,OAAO,EAAEC;MAAa,CACvB,CAAC,EACFd,IAAA,CAACG,KAAK,CAACO,MAAM;QACXG,OAAO,EAAE;UAAEE,WAAW,EAAE;QAAM,CAAE;QAChCJ,IAAI,EAAC,OAAO;QACZC,SAAS,EAAE1B;MAAY,CACxB,CAAC,EAEFc,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEtB;MAAW,CACvB,CAAC,EAEFU,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAExB,cAAe;QAC1ByB,OAAO,EAAEG;MAAoB,CAC9B,CAAC,EAEFhB,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,gBAAgB;QACrBC,SAAS,EAAEvB,cAAe;QAC1BwB,OAAO,EAAEI;MAAoB,CAC9B,CAAC,EACFjB,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,gBAAgB;QACrBC,SAAS,EAAEzB,cAAe;QAC1B0B,OAAO,EAAEK;MAAoB,CAC9B,CAAC,EAEFlB,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,cAAc;QACnBC,SAAS,EAAEpB;MAAmB,CAE/B,CAAC,EAEFQ,IAAA,CAACG,KAAK,CAACO,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEnB;MAAW,CAEvB,CAAC;IAAA,CAEa,CAAC;EAAA,CACC,CAAC;AAE1B,CAAC;AACD,eAAeW,GAAG;AAElB,IAAMe,MAAM,GAAGzB,UAAU,CAAC0B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPhB,eAAe,EAAE,MAAM;IACvBiB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAMV,YAAY,GAAG;EACnBC,WAAW,EAAE;AACf,CAAC;AACD,IAAMC,mBAAmB,GAAG;EAC1BS,KAAK,EAAE;AACT,CAAC;AAED,IAAMR,mBAAmB,GAAG;EAC1BQ,KAAK,EAAE;AACT,CAAC;AACD,IAAMP,mBAAmB,GAAG;EAC1BO,KAAK,EAAE;AACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}